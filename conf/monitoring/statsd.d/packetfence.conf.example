#
# Documentation
#   https://github.com/firehol/netdata/wiki/statsd
#
# Example
#   https://github.com/firehol/netdata/blob/master/conf.d/statsd.d/example.conf
#

[app]
    name = packetfence
    metrics = *
    private charts = yes
    gaps when not collected = no

[devices.registered_unregistered]
    name = devices.registered_unregistered
    title = registered/unregistered devices
    family = packetfence
    context = chart.context
    units = devices
    priority = 91000
    type = line
    dimension = source.packetfence.devices.registered 'registered' last 1 1
    dimension = source.packetfence.devices.unregistered 'unregistered' last 1 1

[devices.online_offline]
    name = devices.online_offline
    title = online/offline devices
    family = packetfence
    context = chart.context
    units = devices
    priority = 91000
    type = line
    dimension = source.packetfence.devices.online 'online' last 1 1
    dimension = source.packetfence.devices.offline 'offline' last 1 1

[devices.registered_per_role]
    name = devices.registered_per_role
    title = devices roles
    family = packetfence
    context = chart.context
    units = devices
    priority = 91000
    type = stacked
    dimension = pattern 'source.packetfence.devices.registered_per_role;*' '' last 1 1
    
[redis.queue_stats_count]
    name = redis.queue_stats_count
    title = redis queue stats counters
    family = packetfence
    context = chart.context
    units = count
    priority = 91000
    type = stacked
    dimension = pattern 'source.packetfence.redis.queue_stats_count;*' '' last 1 1

[redis.queue_stats_expired]
    name = redis.queue_stats_expired
    title = redis queue stats expired counters
    family = packetfence
    context = chart.context
    units = expired
    priority = 91000
    type = stacked
    dimension = pattern 'source.packetfence.redis.queue_stats_expired;*' '' last 1 1

[redis.queue_stats_outstanding]
    name = redis.queue_stats_outstanding
    title = redis queue stats outstanding counters
    family = packetfence
    context = chart.context
    units = outstanding
    priority = 91000
    type = stacked
    dimension = pattern 'source.packetfence.redis.queue_stats_outstanding;*' '' last 1 1
